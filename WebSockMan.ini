###########################################################
#
#   웹소켓 서버 모니터링
#   1.서버가 정상 동작하는지 확인하여 비정상 동작시 서버 재구동 bbb
#
###########################################################

#!/bin/bash

#디버깅 0=FALSE, 1=TRUE
DEBUG_FLAG=1

#웹소켓매니저 APP 기본경로 ( WebSockMan.ini 파일 경로 )
WSM_PATH=$(cd "$(dirname "$0")" && pwd)

###########################################################
#
#   [ 설정 ] : 서버 환경에 맞게 수정해야 됨 !!
#
###########################################################
#웹소켓 서버 URL
SERVER_URL="http://localhost"
#웹소켓 서버 PORT
SERVER_PORT="8080"
#서버 실행 프로그램명
SERVER_APP_PATH=${WSM_PATH}/bin/filewatch
SERVER_APP=${SERVER_APP_PATH}/filewatch
SERVER_APP_CMD=${SERVER_APP}" -addr 127.0.0.1:8080 -m ws"
cd ${SERVER_APP_PATH}

###########################################################
#응답 타임아웃 체크시간
TIMEOUT_SECOND=5
#요청 주기
CHK_INTERVAL=5
#서버프로세스 PID 저장 파일명
WSM_PID_FILE_NM=${WSM_PATH}/WSM_save_pid.txt
rm -f $WSM_PID_FILE_NM

###########################################################
#   로그관련
###########################################################
WSM_DATE=`date +%Y%m%d`
WSM_LOG_PATH=${WSM_PATH}/log
WSM_LOG_FILE_NM=${WSM_LOG_PATH}/WSM_${WSM_DATE}.log

#로그 디렉토리 존재 확인/생성
if [ ! -d ${WSM_LOG_PATH} ]; then
    mkdir ${WSM_LOG_PATH}
fi
#로그 파일 존재 확인/생성
if [ ! -e ${WSM_LOG_FILE_NM} ]; then
    touch ${WSM_LOG_FILE_NM}
fi
#로그함수
ELOG () {
    LOG_TIME=`date +%H:%M:%S.%N`
    if [ $# -eq 2 ]; then
        printf "(E) ${LOG_TIME}\t %-20.20s %s\n" "${1}" "${2}" >> ${WSM_LOG_FILE_NM}
    else
        echo "(E) ${LOG_TIME}    "${1} >> ${WSM_LOG_FILE_NM}
    fi
}
DLOG () {
    LOG_TIME=`date +%H:%M:%S.%N`
    if [ $# -eq 2 ]; then
        printf "(D) ${LOG_TIME}\t %-20.20s %s\n" "${1}" "${2}" >> ${WSM_LOG_FILE_NM}
    else
        echo "(D) ${LOG_TIME}    "${1} >> ${WSM_LOG_FILE_NM}
    fi
}

###########################################################
#서버실행
SERVER_START () {

    #서버 실행할 프로그램 존재여부 체크
    if [ ! -e ${SERVER_APP} ]; then
        ELOG "SERVER APP Not Found!!"
        _____DEBUG_____ "SERVER APP Not Found !! [ Please check PATH ]"
        exit 0
    fi

    #감시할 서버프로그램 구동 및 (실행중인 프로세스 종료 후)재구동
    RESTART=0
    if [ ! -e ${WSM_PID_FILE_NM} ]; then
        touch ${WSM_PID_FILE_NM}
        _____DEBUG_____ "PID file create"
    else
        RESTART=1
        SERVER_PID=`cat ${WSM_PID_FILE_NM}`
        #프로세스가 살아있으면 프로세스 kill
        kill -9 ${SERVER_PID} > /dev/null 2>&1
#        while kill -0 ${SERVER_PID} > /dev/null 2>&1
#        do
#            sleep 1
#        done
        rm -f ${WSM_PID_FILE_NM}
        _____DEBUG_____ "SERVER process Kill"
    fi

    #서버프로그램 구동
    nohup ${SERVER_APP_CMD} > /dev/null 2>&1 &
    #PID 파일에 저장
    echo $! > ${WSM_PID_FILE_NM}
    #현재 프로그램(WSM) 종료시 웹소켓 서버 프로세스도 강제 종료
    trap "kill -9 $!" EXIT

    if [ $RESTART -eq 0 ]; then
        DLOG "SERVER START" "[ $! ]"
        _____DEBUG_____ "SERVER start [ $! ]"
    else
        DLOG "SERVER RESTART" "[ $! ]"
        _____DEBUG_____ "SERVER Restart [ $! ]"
    fi

}

SERVER_PID=''
GET_PID () {
    if [ -e ${WSM_PID_FILE_NM} ]; then
        SERVER_PID=`cat ${WSM_PID_FILE_NM}`
    else
        SERVER_PID=''
    fi
}

###########################################################
#   디버그 함수
###########################################################
_____DEBUG_____bak () {
if [[ ${DEBUG_FLAG} != 0 ]]; then echo "$1"; fi
}

_____DEBUG_____ () {
if [[ ${DEBUG_FLAG} != 0 ]]; then
    if [ $# -eq 2 ]; then
        printf "%-20.20s : %s\n" "$1" "$2"
    else
        echo "$1"
    fi
fi
}
